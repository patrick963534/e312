****************************************************************************************************

libsl project folder tree

    - libsl
        .gitignore

        .git/

        deps/
            libsl/
                include/
                    sl/
                src/

            libc/
                include/
                src/
                lib/
                bin/

            pthread/
                include/
                lib/
                    bsd/ linux/ windows/
                bin/
                    bsd/ linux/ windows/
                
            opengl/
                include/
                bin/
                    bsd/ linux/ windows/
                lib/
                    bsd/ linux/ windows/

            openal/
                include/
                bin/
                    bsd/ linux/ windows/
                lib/
                    bsd/ linux/ windows/ 

        project/
            libsl_cunit/
            libc_cunit/
            gui_demo/
            game_demo/
            sl_minibox/
            tretras/
            snake/

****************************************************************************************************

ABOUT libsl 

    - Try to build a good CROSS-PLATFORM application framework.
        ~. GUI lib. (base on opengl, vs GTK/QT)
        ~. 3D engine.
        ~. 2D engine.
        ~. Network.
        ~. Audio.
        ~. Mutlithread.

    - 3rd library (try to use as little as possible 3rd LIBs, and real GOOD at CROSS-Platform)
        ~. opengl
        ~. openal
        ~. glut
        ~. pthread
        ~. libc
        ~. system lib (try to use as little as possible except have to use it.)
            #. timer
            #. sleep
            #. socket
            #. folder/path functions 

    - REMARK:
        I want these whole thing can be built to static lib. (I remember the 3D tool 'blender' also use static build.)
       
